{"config": {"Build Date": "17 Mar 2022", "Commit": "ac98382", "LLVM Version": "12.0.0", "Mull Version": "0.17.1", "URL": "https://github.com/mull-project/mull"}, "files": {"/home/tpugh_/saturday/more/round_robin/round_robin.c": {"language": "cpp", "mutants": [{"id": "cxx_lt_to_ge", "location": {"end": {"column": 21, "line": 11}, "start": {"column": 20, "line": 11}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 21, "line": 11}, "start": {"column": 20, "line": 11}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 32, "line": 11}, "start": {"column": 30, "line": 11}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 61, "line": 13}, "start": {"column": 60, "line": 13}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_ne_to_eq", "location": {"end": {"column": 33, "line": 29}, "start": {"column": 31, "line": 29}}, "mutatorName": "Replaced != with ==", "replacement": "==", "status": "Killed"}, {"id": "cxx_le_to_gt", "location": {"end": {"column": 26, "line": 31}, "start": {"column": 24, "line": 31}}, "mutatorName": "Replaced <= with >", "replacement": ">", "status": "Killed"}, {"id": "cxx_le_to_lt", "location": {"end": {"column": 26, "line": 31}, "start": {"column": 24, "line": 31}}, "mutatorName": "Replaced <= with <", "replacement": "<", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 52, "line": 31}, "start": {"column": 51, "line": 31}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 52, "line": 31}, "start": {"column": 51, "line": 31}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 34, "line": 33}, "start": {"column": 33, "line": 33}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 30, "line": 37}, "start": {"column": 29, "line": 37}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 30, "line": 37}, "start": {"column": 29, "line": 37}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 38, "line": 39}, "start": {"column": 37, "line": 39}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 34, "line": 40}, "start": {"column": 33, "line": 40}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 26, "line": 42}, "start": {"column": 24, "line": 42}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Killed"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 42, "line": 42}, "start": {"column": 40, "line": 42}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 59, "line": 45}, "start": {"column": 58, "line": 45}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 85, "line": 45}, "start": {"column": 84, "line": 45}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 110, "line": 45}, "start": {"column": 109, "line": 45}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 128, "line": 45}, "start": {"column": 127, "line": 45}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 42, "line": 46}, "start": {"column": 41, "line": 46}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 50, "line": 46}, "start": {"column": 49, "line": 46}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 68, "line": 46}, "start": {"column": 67, "line": 46}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 54, "line": 47}, "start": {"column": 53, "line": 47}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 62, "line": 47}, "start": {"column": 61, "line": 47}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 20, "line": 50}, "start": {"column": 18, "line": 50}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 28, "line": 50}, "start": {"column": 27, "line": 50}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 37, "line": 54}, "start": {"column": 36, "line": 54}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_le_to_gt", "location": {"end": {"column": 43, "line": 54}, "start": {"column": 41, "line": 54}}, "mutatorName": "Replaced <= with >", "replacement": ">", "status": "Killed"}, {"id": "cxx_le_to_lt", "location": {"end": {"column": 43, "line": 54}, "start": {"column": 41, "line": 54}}, "mutatorName": "Replaced <= with <", "replacement": "<", "status": "Killed"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 22, "line": 56}, "start": {"column": 20, "line": 56}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Killed"}, {"id": "cxx_mul_to_div", "location": {"end": {"column": 38, "line": 64}, "start": {"column": 37, "line": 64}}, "mutatorName": "Replaced * with /", "replacement": "/", "status": "Killed"}, {"id": "cxx_div_to_mul", "location": {"end": {"column": 44, "line": 64}, "start": {"column": 43, "line": 64}}, "mutatorName": "Replaced / with *", "replacement": "*", "status": "Killed"}, {"id": "cxx_mul_to_div", "location": {"end": {"column": 50, "line": 65}, "start": {"column": 49, "line": 65}}, "mutatorName": "Replaced * with /", "replacement": "/", "status": "Killed"}, {"id": "cxx_div_to_mul", "location": {"end": {"column": 56, "line": 65}, "start": {"column": 55, "line": 65}}, "mutatorName": "Replaced / with *", "replacement": "*", "status": "Killed"}], "source": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n      int i, limit, total = 0, x, counter = 0, time_quantum;\r\n      int wait_time = 0, turnaround_time = 0, arrival_time[10], burst_time[10], temp[10];\r\n      float average_wait_time, average_turnaround_time;\r\n      printf(\"Enter Total Number of Processes: \");\r\n      scanf(\"%d\", &limit);\r\n      x = limit;\r\n      for(i = 0; i < limit; i++)\r\n      {\r\n            printf(\"\\nEnter Details of Process[%d]: \\n\", i + 1);\r\n \r\n            printf(\"Arrival Time: \");\r\n \r\n            scanf(\"%d\", &arrival_time[i]);\r\n \r\n            printf(\"Burst Time: \");\r\n \r\n            scanf(\"%d\", &burst_time[i]);\r\n \r\n            temp[i] = burst_time[i];\r\n      }\r\n \r\n      printf(\"\\nEnter Time Quantum: \");\r\n      scanf(\"%d\", &time_quantum);\r\n      printf(\"\\nProcess ID\tBurst Time\t Turnaround Time\t Waiting Time\");\r\n      for(total = 0, i = 0; x != 0;)\r\n      {\r\n            if(temp[i] <= time_quantum && temp[i] > 0)\r\n            {\r\n                  total = total + temp[i];\r\n                  temp[i] = 0;\r\n                  counter = 1;\r\n            }\r\n            else if(temp[i] > 0)\r\n            {\r\n                  temp[i] = temp[i] - time_quantum;\r\n                  total = total + time_quantum;\r\n            }\r\n            if(temp[i] == 0 && counter == 1)\r\n            {\r\n                  x--;\r\n                  printf(\"\\nProcess[%d]\t\t%d\t\t%d\t\t %d\", i + 1, burst_time[i], total - arrival_time[i], total - arrival_time[i] - burst_time[i]);\r\n                  wait_time = wait_time + total - arrival_time[i] - burst_time[i];\r\n                  turnaround_time = turnaround_time + total - arrival_time[i];\r\n                  counter = 0;\r\n            }\r\n            if(i == limit - 1)\r\n            {\r\n                  i = 0;\r\n            }\r\n            else if(arrival_time[i + 1] <= total)\r\n            {\r\n                  i++;\r\n            }\r\n            else\r\n            {\r\n                  i = 0;\r\n            }\r\n      }\r\n \r\n      average_wait_time = wait_time * 1.0 / limit;\r\n      average_turnaround_time = turnaround_time * 1.0 / limit;\r\n      printf(\"\\n\\nAverage Waiting Time: %f\", average_wait_time);\r\n      printf(\"\\nAvg Turnaround Time: %f \\n\", average_turnaround_time);\r\n      return 0;\r\n}"}}, "framework": {"brandingInformation": {"homepageUrl": "https://github.com/mull-project/mull"}, "name": "Mull", "version": "0.17.1, LLVM 12.0.0"}, "mutationScore": 100, "schemaVersion": "1.7", "thresholds": {"high": 80, "low": 60}}